{"version":3,"sources":["store.js"],"names":["w","configs","method","localStorage","set","key","value","json","JSON","stringify","get","item","getItem","undefined","use","window","remove","removeItem","clear","has","getAll","keys","Object","from","Array","parseJSONSafe","string","val","err","store"],"mappings":"cAAA,SAAEA,GACE,GAAAC,IAGIC,OAAQC,cADZC,EAAA,SAAAC,EAAAC,GAKI,GAAMC,GAAOC,KAAKC,UAAUH,EAD1BF,GAAMF,OAANE,QAAMC,EAAMC,IAAlBI,EAAA,SAAAL,GAMI,GAAMM,GAAOV,EAAQC,OAAOU,QAAQP,EADlCK,OAAOL,gBAADM,GACFA,OAEKE,EAAPF,IAHRG,EAAA,SAAAZ,GAWQA,GADgB,gBAAVA,KADRY,EAAMC,OAACb,KAELA,IAASa,EAAOb,QACnB,KAAA,mCAEGD,GAAMC,OAAAA,GALdc,EAAA,SAAAX,GAYIJ,EAAQC,OAAOe,WAAWZ,IAD9Ba,EAAA,WAKIjB,EAAQC,OAAOgB,SADnBC,EAAA,SAAAd,GAKI,MAAoBQ,UAAbH,EAAIL,IADfe,EAAA,WAKI,GAAMC,GAAOC,OAAOD,KAAKpB,EAAQC,OAD/BkB,OAAAA,OAASG,KAATH,EAAS,SAAAf,GACLgB,GAAAA,KAEF,OADJV,GAAOa,GAAMD,EAAKF,GACRV,KAHdc,EAAA,SAAAC,GAUI,GAAIC,GAAAA,MADFF,KACEE,EAAAA,KAAAA,MAAJD,GACA,MAAGE,GACCD,EAAMnB,KAENmB,MAAAA,GAGP3B,GARD6B,OAWIzB,IAAAA,EAAKM,IAAAA,EAAKI,IAAAA,EAAKE,OAAAA,EAAQE,MAAAA,EAAOC,IAAAA,EAAKC,OAAAA,IAD7BL","file":"store.min.js","sourcesContent":["((w) => {\r\n    'use strict';\r\n\r\n    const configs = {\r\n        method: localStorage\r\n    };\r\n\r\n    const set = (key, value) => {\r\n        const json = JSON.stringify(value);\r\n        configs.method.setItem(key, json);\r\n    };\r\n\r\n    const get = (key) => {\r\n        const item = configs.method.getItem(key);\r\n        if(typeof item !== \"string\"){\r\n            return undefined;\r\n        } else {\r\n            return parseJSONSafe(item);\r\n        }\r\n    };\r\n\r\n    const use = (method) => {\r\n        if(typeof method == 'string') {\r\n            method = window[method];\r\n        }\r\n        if(!method || !method.setItem){\r\n            throw 'This storage method is not valid.';\r\n        } else {\r\n            configs.method = method; \r\n        }\r\n    };\r\n\r\n    const remove = (key) => {\r\n        configs.method.removeItem(key);\r\n    };\r\n\r\n    const clear = () => {\r\n        configs.method.clear();\r\n    };\r\n\r\n    const has = (key) => {\r\n        return get(key) !== undefined;\r\n    };\r\n\r\n    const getAll = () => {\r\n        const keys = Object.keys(configs.method);\r\n        return Array.from(keys, (key) => {\r\n            const item = {};\r\n            item[key] = get(key);\r\n            return item;\r\n        });\r\n    };\r\n\r\n    const parseJSONSafe = (string) => {\r\n        let val;\r\n        try{\r\n            val = JSON.parse(string);\r\n        }catch(err){\r\n            val = null;\r\n        }\r\n        return val;\r\n    };\r\n\r\n    w.store = {\r\n        set, get, use, remove, clear, has, getAll\r\n    };\r\n\r\n})(window);"],"sourceRoot":"/source/"}