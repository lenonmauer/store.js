{"version":3,"sources":["store.js"],"names":["w","configs","method","localStorage","set","key","value","json","JSON","stringify","setItem","get","item","getItem","parseJSONSafe","use","window","remove","removeItem","clear","has","undefined","getAll","keys","Object","map","string","val","parse","err","store"],"mappings":"CAAA,SAACA,GACG,YAEA,IAAMC,IACFC,OAAQC,cAGNC,EAAM,SAAAC,EAAAC,GACR,GAAMC,GAAOC,KAAKC,UAAUH,EAC5BL,GAAQC,OAAOQ,QAAQL,EAAKE,IAG1BI,EAAM,SAAAN,GACR,GAAMO,GAAOX,EAAQC,OAAOW,QAAQR,EACpC,OAAG,gBAAAO,GACC,OAEOE,EAAcF,IAIvBG,EAAM,SAAAb,GAIR,GAHG,gBAAAA,KACCA,EAASc,OAAOd,KAEjBA,IAAWA,EAACA,QACX,KAAM,mCAEND,GAAQC,OAASA,GAInBe,EAAS,SAAAZ,GACXJ,EAAQC,OAAOgB,WAAWb,IAGxBc,EAAQ,WACVlB,EAAQC,OAAOiB,SAGbC,EAAM,SAAAf,GACR,MAAoBgB,UAAbV,EAAIN,IAGTiB,EAAS,WACX,GAAMC,GAAOC,OAAOD,KAAKtB,EAAQC,OACjC,OAAOqB,GAAKE,IAAI,SAAApB,GACZ,GAAMO,KAEN,OADAA,GAAKP,GAAOM,EAAIN,GACTO,KAITE,EAAgB,SAAAY,GAClB,GAAIC,GAAAA,MACJ,KACIA,EAAMnB,KAAKoB,MAAMF,GADrB,MAECG,GACGF,EAAM,KAEV,MAAOA,GAGX3B,GAAE8B,OACE1B,IAAAA,EAAAA,IAAAA,EAAKO,IAAAA,EAAAA,OAAAA,EAAKI,MAAAA,EAAKE,IAAAA,EAAAA,OAAAA,IAGpBD","file":"store.min.js","sourcesContent":["((w) => {\r\n    'use strict' \r\n\r\n    const configs = {\r\n        method: localStorage\r\n    };\r\n\r\n    const set = (key, value) => {\r\n        const json = JSON.stringify(value);\r\n        configs.method.setItem(key, json);\r\n    };\r\n\r\n    const get = (key) => {\r\n        const item = configs.method.getItem(key);\r\n        if(typeof item !== \"string\"){\r\n            return undefined;\r\n        } else {\r\n            return parseJSONSafe(item);\r\n        }\r\n    };\r\n\r\n    const use = (method) => {\r\n        if(typeof method == 'string') {\r\n            method = window[method];\r\n        }\r\n        if(!method || !method.setItem){\r\n            throw 'This storage method is not valid.';\r\n        } else {\r\n            configs.method = method; \r\n        }\r\n    };\r\n\r\n    const remove = (key) => {\r\n        configs.method.removeItem(key);\r\n    };\r\n\r\n    const clear = () => {\r\n        configs.method.clear();\r\n    };\r\n\r\n    const has = (key) => {\r\n        return get(key) !== undefined;\r\n    };\r\n\r\n    const getAll = () => {\r\n        const keys = Object.keys(configs.method);\r\n        return keys.map((key) => {\r\n            const item = {};\r\n            item[key] = get(key);\r\n            return item;\r\n        });\r\n    };\r\n\r\n    const parseJSONSafe = (string) => {\r\n        let val;\r\n        try{\r\n            val = JSON.parse(string);\r\n        }catch(err){\r\n            val = null;\r\n        }\r\n        return val;\r\n    };\r\n\r\n    w.store = {\r\n        set, get, use, remove, clear, has, getAll\r\n    };\r\n\r\n})(window);"],"sourceRoot":"/source/"}